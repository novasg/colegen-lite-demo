{"version":3,"file":"js/configuration/system/index~js/setup.js?id=5f8f4f71ca80720a7fe9","sources":["webpack:///form.vue","webpack:///./resources/js/views/configuration/system/form.vue?72f7","webpack:///./resources/js/views/configuration/system/form.vue","webpack:///./resources/js/views/configuration/system/form.vue?5bc4","webpack:///./resources/js/views/configuration/system/form.vue?d38d"],"sourcesContent":["<template>\n    <div class=\"card\">\n        <div class=\"card-body p-4\">\n            <form @submit.prevent=\"submit\" @keydown=\"configForm.errors.clear($event.target.name)\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.default_color_theme')}}</label>\n                                    <select v-model=\"configForm.color_theme\" class=\"custom-select col-12\" name=\"color_theme\" @change=\"configForm.errors.clear('color_theme')\">\n                                      <option v-for=\"option in systemConfigVariables.color_themes\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"color_theme\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.default_direction')}}</label>\n                                    <select v-model=\"configForm.direction\" class=\"custom-select col-12\" name=\"direction\" @change=\"configForm.errors.clear('direction')\">\n                                      <option v-for=\"option in systemConfigVariables.directions\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"direction\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.default_sidebar')}}</label>\n                                    <select v-model=\"configForm.sidebar\" class=\"custom-select col-12\" name=\"sidebar\" @change=\"configForm.errors.clear('sidebar')\">\n                                      <option v-for=\"option in systemConfigVariables.sidebar\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"sidebar\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.date_format')}}</label>\n                                    <select v-model=\"configForm.date_format\" class=\"custom-select col-12\" name=\"date_format\" @change=\"configForm.errors.clear('date_format')\">\n                                      <option v-for=\"option in systemConfigVariables.date_formats\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"date_format\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.time_format')}}</label>\n                                    <select v-model=\"configForm.time_format\" class=\"custom-select col-12\" name=\"time_format\" @change=\"configForm.errors.clear('time_format')\">\n                                      <option v-for=\"option in systemConfigVariables.time_formats\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"time_format\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.notification_position')}}</label>\n                                    <select v-model=\"configForm.notification_position\" class=\"custom-select col-12\" name=\"notification_position\" @change=\"configForm.errors.clear('notification_position')\">\n                                      <option v-for=\"option in systemConfigVariables.notification_positions\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"notification_position\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.timezone')}}</label>\n                                    <select v-model=\"configForm.timezone\" class=\"custom-select col-12\" name=\"timezone\" @change=\"configForm.errors.clear('timezone')\">\n                                      <option v-for=\"option in systemConfigVariables.timezones\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"timezone\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('calendar.first_day_of_week')}}</label>\n                                    <select v-model=\"configForm.first_day_of_week\" class=\"custom-select col-12\" name=\"first_day_of_week\" @change=\"configForm.errors.clear('first_day_of_week')\">\n                                      <option v-for=\"option in systemConfigVariables.days\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"first_day_of_week\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.currency')}}</label>\n                                    <select v-model=\"configForm.currency\" class=\"custom-select col-12\" name=\"currency\" @change=\"configForm.errors.clear('currency')\">\n                                      <option v-for=\"option in systemConfigVariables.currencies\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"currency\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.page_length')}}</label>\n                                    <select v-model=\"configForm.page_length\" class=\"custom-select col-12\" name=\"page_length\" @change=\"configForm.errors.clear('page_length')\">\n                                      <option v-for=\"option in getConfig('pagination')\" v-bind:value=\"option\">\n                                        {{ option+' '+trans('general.per_page') }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"page_length\"></show-error>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.https')}}</label>\n                                    <div>\n                                        <switches class=\"\" v-model=\"configForm.https\" theme=\"bootstrap\" color=\"success\"></switches>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('utility.todo')}}</label>\n                                    <div>\n                                        <switches class=\"\" v-model=\"configForm.todo\" theme=\"bootstrap\" color=\"success\"></switches>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button type=\"submit\" v-if=\"!setupWizard\" class=\"btn btn-info waves-effect waves-light pull-right m-t-10\">{{trans('general.save')}}</button>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            setupWizard: {\n                default: false\n            },\n            configurations: {\n                required: false\n            }\n        },\n        components : { },\n        data() {\n            return {\n                configForm: new Form({\n                    color_theme: '',\n                    direction: '',\n                    sidebar: '',\n                    date_format: '',\n                    time_format: '',\n                    notification_position: '',\n                    timezone: '',\n                    first_day_of_week: '',\n                    page_length: 10,\n                    currency: '',\n                    https: 0,\n                    todo: 0,\n                    config_type: ''\n                }, false),\n                systemConfigVariables: {\n                    color_themes: [],\n                    directions: [],\n                    sidebar: [],\n                    date_formats: [],\n                    time_formats: [],\n                    notification_positions: [],\n                    timezones: [],\n                    currencies: [],\n                    days: []\n                },\n                direction: '',\n                sidebar: ''\n            };\n        },\n        mounted(){\n            if(!helper.hasPermission('access-configuration')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n            this.getPreRequisite();\n\n            if(!this.setupWizard)\n                this.getConfiguration();\n        },\n        methods: {\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/configuration/variable?type=system')\n                    .then(response => {\n                        this.systemConfigVariables.color_themes = response.color_themes;\n                        this.systemConfigVariables.directions = response.directions;\n                        this.systemConfigVariables.currencies = response.currencies;\n                        this.systemConfigVariables.sidebar = response.sidebar;\n                        this.systemConfigVariables.date_formats = response.date_formats;\n                        this.systemConfigVariables.time_formats = response.time_formats;\n                        this.systemConfigVariables.days = response.days;\n                        this.systemConfigVariables.notification_positions = response.notification_positions;\n                        this.systemConfigVariables.timezones = response.timezones;\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getConfiguration(){\n                let loader = this.$loading.show();\n                axios.get('/api/configuration')\n                    .then(response => {\n                        this.configForm = helper.formAssign(this.configForm, response);\n                        this.direction = response.direction;\n                        this.sidebar = response.sidebar;\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            submit(){\n                let loader = this.$loading.show();\n                this.configForm.config_type = 'system';\n                this.configForm.https = (this.configForm.https) ? 1 : 0;\n                this.configForm.todo = (this.configForm.todo) ? 1 : 0;\n                return this.configForm.post('/api/configuration')\n                    .then(response => {\n                        this.$store.dispatch('setConfig',{loaded: false});\n                        toastr.success(response.message);\n                        loader.hide();\n                        return true;\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        return false;\n                    });\n            },\n            getConfig(config){\n                return helper.getConfig(config);\n            }\n        },\n        watch: {\n            configurations(val){\n                if (val)\n                    helper.formAssign(this.configForm,val);\n            }\n        }\n    }\t\n</script>","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"card\" }, [\n    _c(\"div\", { staticClass: \"card-body p-4\" }, [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n              return _vm.submit($event)\n            },\n            keydown: function($event) {\n              return _vm.configForm.errors.clear($event.target.name)\n            }\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"configuration.default_color_theme\"))\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.color_theme,\n                              expression: \"configForm.color_theme\"\n                            }\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"color_theme\" },\n                          on: {\n                            change: [\n                              function($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function(o) {\n                                    return o.selected\n                                  })\n                                  .map(function(o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"color_theme\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"color_theme\"\n                                )\n                              }\n                            ]\n                          }\n                        },\n                        _vm._l(_vm.systemConfigVariables.color_themes, function(\n                          option\n                        ) {\n                          return _c(\n                            \"option\",\n                            { domProps: { value: option.value } },\n                            [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(option.text) +\n                                  \"\\n                                  \"\n                              )\n                            ]\n                          )\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"color_theme\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"configuration.default_direction\"))\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.direction,\n                              expression: \"configForm.direction\"\n                            }\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"direction\" },\n                          on: {\n                            change: [\n                              function($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function(o) {\n                                    return o.selected\n                                  })\n                                  .map(function(o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"direction\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function($event) {\n                                return _vm.configForm.errors.clear(\"direction\")\n                              }\n                            ]\n                          }\n                        },\n                        _vm._l(_vm.systemConfigVariables.directions, function(\n                          option\n                        ) {\n                          return _c(\n                            \"option\",\n                            { domProps: { value: option.value } },\n                            [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(option.text) +\n                                  \"\\n                                  \"\n                              )\n                            ]\n                          )\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"direction\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"configuration.default_sidebar\"))\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.sidebar,\n                              expression: \"configForm.sidebar\"\n                            }\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"sidebar\" },\n                          on: {\n                            change: [\n                              function($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function(o) {\n                                    return o.selected\n                                  })\n                                  .map(function(o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"sidebar\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function($event) {\n                                return _vm.configForm.errors.clear(\"sidebar\")\n                              }\n                            ]\n                          }\n                        },\n                        _vm._l(_vm.systemConfigVariables.sidebar, function(\n                          option\n                        ) {\n                          return _c(\n                            \"option\",\n                            { domProps: { value: option.value } },\n                            [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(option.text) +\n                                  \"\\n                                  \"\n                              )\n                            ]\n                          )\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"sidebar\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.date_format\")))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.date_format,\n                              expression: \"configForm.date_format\"\n                            }\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"date_format\" },\n                          on: {\n                            change: [\n                              function($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function(o) {\n                                    return o.selected\n                                  })\n                                  .map(function(o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"date_format\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"date_format\"\n                                )\n                              }\n                            ]\n                          }\n                        },\n                        _vm._l(_vm.systemConfigVariables.date_formats, function(\n                          option\n                        ) {\n                          return _c(\n                            \"option\",\n                            { domProps: { value: option.value } },\n                            [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(option.text) +\n                                  \"\\n                                  \"\n                              )\n                            ]\n                          )\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"date_format\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.time_format\")))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.time_format,\n                              expression: \"configForm.time_format\"\n                            }\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"time_format\" },\n                          on: {\n                            change: [\n                              function($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function(o) {\n                                    return o.selected\n                                  })\n                                  .map(function(o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"time_format\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"time_format\"\n                                )\n                              }\n                            ]\n                          }\n                        },\n                        _vm._l(_vm.systemConfigVariables.time_formats, function(\n                          option\n                        ) {\n                          return _c(\n                            \"option\",\n                            { domProps: { value: option.value } },\n                            [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(option.text) +\n                                  \"\\n                                  \"\n                              )\n                            ]\n                          )\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"time_format\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"configuration.notification_position\")\n                          )\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.notification_position,\n                              expression: \"configForm.notification_position\"\n                            }\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"notification_position\" },\n                          on: {\n                            change: [\n                              function($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function(o) {\n                                    return o.selected\n                                  })\n                                  .map(function(o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"notification_position\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"notification_position\"\n                                )\n                              }\n                            ]\n                          }\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.notification_positions,\n                          function(option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                )\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"notification_position\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.timezone\")))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.timezone,\n                              expression: \"configForm.timezone\"\n                            }\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"timezone\" },\n                          on: {\n                            change: [\n                              function($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function(o) {\n                                    return o.selected\n                                  })\n                                  .map(function(o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"timezone\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function($event) {\n                                return _vm.configForm.errors.clear(\"timezone\")\n                              }\n                            ]\n                          }\n                        },\n                        _vm._l(_vm.systemConfigVariables.timezones, function(\n                          option\n                        ) {\n                          return _c(\n                            \"option\",\n                            { domProps: { value: option.value } },\n                            [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(option.text) +\n                                  \"\\n                                  \"\n                              )\n                            ]\n                          )\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"timezone\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"calendar.first_day_of_week\")))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.first_day_of_week,\n                              expression: \"configForm.first_day_of_week\"\n                            }\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"first_day_of_week\" },\n                          on: {\n                            change: [\n                              function($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function(o) {\n                                    return o.selected\n                                  })\n                                  .map(function(o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"first_day_of_week\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"first_day_of_week\"\n                                )\n                              }\n                            ]\n                          }\n                        },\n                        _vm._l(_vm.systemConfigVariables.days, function(\n                          option\n                        ) {\n                          return _c(\n                            \"option\",\n                            { domProps: { value: option.value } },\n                            [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(option.text) +\n                                  \"\\n                                  \"\n                              )\n                            ]\n                          )\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"first_day_of_week\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.currency\")))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.currency,\n                              expression: \"configForm.currency\"\n                            }\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"currency\" },\n                          on: {\n                            change: [\n                              function($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function(o) {\n                                    return o.selected\n                                  })\n                                  .map(function(o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"currency\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function($event) {\n                                return _vm.configForm.errors.clear(\"currency\")\n                              }\n                            ]\n                          }\n                        },\n                        _vm._l(_vm.systemConfigVariables.currencies, function(\n                          option\n                        ) {\n                          return _c(\n                            \"option\",\n                            { domProps: { value: option.value } },\n                            [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(option.text) +\n                                  \"\\n                                  \"\n                              )\n                            ]\n                          )\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"currency\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.page_length\")))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.page_length,\n                              expression: \"configForm.page_length\"\n                            }\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"page_length\" },\n                          on: {\n                            change: [\n                              function($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function(o) {\n                                    return o.selected\n                                  })\n                                  .map(function(o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"page_length\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"page_length\"\n                                )\n                              }\n                            ]\n                          }\n                        },\n                        _vm._l(_vm.getConfig(\"pagination\"), function(option) {\n                          return _c(\"option\", { domProps: { value: option } }, [\n                            _vm._v(\n                              \"\\n                                    \" +\n                                _vm._s(\n                                  option + \" \" + _vm.trans(\"general.per_page\")\n                                ) +\n                                \"\\n                                  \"\n                            )\n                          ])\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"page_length\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"configuration.https\")))\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.https,\n                            callback: function($$v) {\n                              _vm.$set(_vm.configForm, \"https\", $$v)\n                            },\n                            expression: \"configForm.https\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ])\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"utility.todo\")))\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.todo,\n                            callback: function($$v) {\n                              _vm.$set(_vm.configForm, \"todo\", $$v)\n                            },\n                            expression: \"configForm.todo\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ])\n                ])\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          !_vm.setupWizard\n            ? _c(\n                \"button\",\n                {\n                  staticClass:\n                    \"btn btn-info waves-effect waves-light pull-right m-t-10\",\n                  attrs: { type: \"submit\" }\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n              )\n            : _vm._e()\n        ]\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=9d9258c8&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/webmaster/Projects/scriptmint/instikit-lite/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9d9258c8')) {\n      api.createRecord('9d9258c8', component.options)\n    } else {\n      api.reload('9d9258c8', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=9d9258c8&\", function () {\n      api.rerender('9d9258c8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/system/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=9d9258c8&\""],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AA5BA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;AAsDA;AACA;AACA;AAEA;AAJA;AA1GA;;;;;;;;;;;;ACruBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}